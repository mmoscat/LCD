#include <Arduino.h>
#include <LCD.h>

// The bitmap being drawn
char bitmap[] = { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0xc0, 0x60, 0x60, 0x60, 0xe0, 0xc0, 0xc0, 0xc0,
		  0x40, 0x20, 0x80, 0xc0, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x80, 0x80, 0x40, 0x00, 0x80, 0x40, 0xe0, 0x60, 0xc0, 0xc0,
		  0xc0, 0x40, 0x00, 0x00, 0x60, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0,
		  0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x80, 0x80, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x20, 0x20, 0x20, 0x60, 0xfe, 0xff,
		  0x00, 0x00, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0,
		  0xfc, 0x07, 0x01, 0x00, 0xfe, 0xff, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0xf8, 0xfe, 0x02, 0x01,
		  0xfe, 0x01, 0x00, 0xff, 0x20, 0x40, 0x40, 0x41, 0x23, 0xff, 0xfc, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x41, 0x21, 0x31, 0x17, 0x19,
		  0x1c, 0x1b, 0x19, 0x38, 0x38, 0x70, 0x20, 0x20, 0x10, 0x00, 0x00, 0x01,
		  0x07, 0x1f, 0x1c, 0x3c, 0x73, 0x70, 0x60, 0x60, 0x7f, 0x60, 0x20, 0x20,
		  0x10, 0x08, 0x04, 0x00, 0x41, 0xa0, 0x11, 0x4f, 0x67, 0x33, 0x30, 0x3c,
		  0x33, 0x30, 0x30, 0x3f, 0x32, 0x71, 0x71, 0x61, 0x22, 0x3f, 0x1f, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
		  0x40, 0x40, 0x20, 0xa0, 0x20, 0x20, 0x20, 0x40, 0xc0, 0x00, 0x00, 0x00,
		  0x20, 0xe0, 0x20, 0x00, 0xc0, 0xa0, 0x20, 0x20, 0x20, 0xe0, 0x40, 0x40,
		  0x40, 0x50, 0x30, 0x20, 0xe0, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
		  0xe0, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x40,
		  0x40, 0x20, 0xe0, 0x00, 0x00, 0xc0, 0x80, 0x80, 0x40, 0x40, 0x20, 0x20,
		  0x20, 0x60, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc3,
		  0xc2, 0x00, 0xff, 0x00, 0x0c, 0x0a, 0x0a, 0x06, 0x85, 0x78, 0x00, 0x00,
		  0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0xf8, 0x07, 0x01, 0x1e, 0x24, 0x28, 0x1e, 0x01, 0x00,
		  0x07, 0xf8, 0x00, 0x00, 0x0e, 0x0e, 0x01, 0x01, 0xf9, 0x07, 0x02, 0x02,
		  0x04, 0x18, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x30, 0x40, 0x40,
		  0x40, 0x20, 0x10, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
		  0x02, 0x05, 0x05, 0x05, 0x04, 0x04, 0x02, 0x03, 0x01, 0x00, 0x00, 0x00,
		  0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00,
		  0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x00, 0x00,
		  0x00, 0x01, 0x01, 0x01, 0x00, 0x0c, 0x08, 0x07, 0x00, 0x00, 0x00, 0x00,
		  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		  0x00, };

// The LCD instance
LCD lcd;

void setup()
{
     // Attempt to initialize the LCD as buffered (default)
     if (lcd.init()) {
	  // When successful, turn on the backlight, and set to not auto-flush
	  lcd.setBacklight();
	  lcd.setAutoFlush(false);

	  // Write text into screen buffer
	  lcd.writeString("LCD", 24, 8, 2);
	  lcd.writeString("INITIALIZED", 8, 24);

	  // Flush screen buffer
	  lcd.flush();

	  delay(800);

	  // Clear screen buffer, but don't yet flush
	  lcd.clear();
     }
}

bool inverted = false;

void loop()
{
     // Draw the top half of the bitmap
     lcd.drawBitmap(bitmap, 0, 0, 84, 24, 1, inverted);
     lcd.flush();

     delay(1500);

     // Draw the bottom half of the bitmap
     lcd.drawBitmap(bitmap + (84 * 3), 0, 24, 84, 24);
     lcd.flush();

     delay(1500);

     // Invert the entire display
     lcd.setDisplayMode(inverted ? LCD::DISPLAY_NORMAL : LCD::DISPLAY_INVERTED);
     inverted = !inverted;

     // Draw the bitmap inverted, but don't flush, just to overwrite the buffer
     lcd.drawBitmap(bitmap, 0, 0, 84, 48, 1, true);

     delay(1500);
}
